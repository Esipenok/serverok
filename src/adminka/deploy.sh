#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –¥–ª—è –¥–µ–ø–ª–æ—è –∞–¥–º–∏–Ω–∫–∏ –Ω–∞ —Å–µ—Ä–≤–µ—Ä
# –ê–≤—Ç–æ—Ä: Assistant
# –î–∞—Ç–∞: $(date)

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
SERVER_IP="46.62.131.90"
SSH_KEY="C:\Users\Andrey\.ssh\id_ed25519"
REMOTE_PATH="/root/adminka"
DOCKER_CONTAINER="adminka"

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–≤–æ–¥–∞ —Å–æ–æ–±—â–µ–Ω–∏–π
log_info() {
    echo -e "${BLUE}‚ÑπÔ∏è  $1${NC}"
}

log_success() {
    echo -e "${GREEN}‚úÖ $1${NC}"
}

log_warning() {
    echo -e "${YELLOW}‚ö†Ô∏è  $1${NC}"
}

log_error() {
    echo -e "${RED}‚ùå $1${NC}"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è SSH –∫–æ–º–∞–Ω–¥
execute_ssh() {
    local command="$1"
    log_info "–í—ã–ø–æ–ª–Ω—è–µ–º: $command"
    
    ssh -i "$SSH_KEY" root@"$SERVER_IP" "$command"
    local exit_code=$?
    
    if [ $exit_code -eq 0 ]; then
        log_success "–ö–æ–º–∞–Ω–¥–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ"
        return 0
    else
        log_error "–û—à–∏–±–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∫–æ–º–∞–Ω–¥—ã: $command"
        return 1
    fi
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–æ–≤
upload_file() {
    local local_path="$1"
    local remote_path="$2"
    
    log_info "–ó–∞–≥—Ä—É–∂–∞–µ–º —Ñ–∞–π–ª—ã –Ω–∞ —Å–µ—Ä–≤–µ—Ä..."
    
    scp -i "$SSH_KEY" "$local_path" root@"$SERVER_IP":"$remote_path"
    local exit_code=$?
    
    if [ $exit_code -eq 0 ]; then
        log_success "–§–∞–π–ª—ã –∑–∞–≥—Ä—É–∂–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ"
        return 0
    else
        log_error "–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–æ–≤"
        return 1
    fi
}

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–µ–ø–ª–æ—è
main() {
    log_info "üöÄ –ù–∞—á–∏–Ω–∞–µ–º –¥–µ–ø–ª–æ–π –∞–¥–º–∏–Ω–∫–∏ –Ω–∞ —Å–µ—Ä–≤–µ—Ä $SERVER_IP"
    
    # 1. –°–æ–∑–¥–∞–µ–º –∞—Ä—Ö–∏–≤ –∞–¥–º–∏–Ω–∫–∏ (–∏—Å–∫–ª—é—á–∞—è node_modules)
    log_info "üì¶ –°–æ–∑–¥–∞–µ–º –∞—Ä—Ö–∏–≤ –∞–¥–º–∏–Ω–∫–∏..."
    
    local archive_name="adminka_$(date +%Y%m%d_%H%M%S).tar.gz"
    local archive_path="./$archive_name"
    
    # –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–π –∞—Ä—Ö–∏–≤ –µ—Å–ª–∏ –µ—Å—Ç—å
    [ -f "$archive_path" ] && rm -f "$archive_path"
    
    # –°–æ–∑–¥–∞–µ–º –∞—Ä—Ö–∏–≤ —Å –∏—Å–∫–ª—é—á–µ–Ω–∏–µ–º node_modules
    tar -czf "$archive_path" --exclude=node_modules --exclude=*.tar.gz .
    
    if [ $? -ne 0 ]; then
        log_error "–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∞—Ä—Ö–∏–≤–∞"
        exit 1
    fi
    
    log_success "–ê—Ä—Ö–∏–≤ —Å–æ–∑–¥–∞–Ω: $archive_path"
    
    # 2. –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –∞–¥–º–∏–Ω–∫–∏
    log_info "üõë –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –∞–¥–º–∏–Ω–∫–∏..."
    if ! execute_ssh "docker stop $DOCKER_CONTAINER 2>/dev/null || true"; then
        log_warning "–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ: –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä (–≤–æ–∑–º–æ–∂–Ω–æ, –æ–Ω –Ω–µ –∑–∞–ø—É—â–µ–Ω)"
    fi
    
    # 3. –ó–∞–≥—Ä—É–∂–∞–µ–º –∞—Ä—Ö–∏–≤ –Ω–∞ —Å–µ—Ä–≤–µ—Ä
    if ! upload_file "$archive_path" "/root/$archive_name"; then
        log_error "–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∞—Ä—Ö–∏–≤–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä"
        exit 1
    fi
    
    # 4. –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–µ —Ñ–∞–π–ª—ã –∞–¥–º–∏–Ω–∫–∏ –∏ —Ä–∞—Å–ø–∞–∫–æ–≤—ã–≤–∞–µ–º –Ω–æ–≤—ã–µ
    log_info "üîÑ –û–±–Ω–æ–≤–ª—è–µ–º —Ñ–∞–π–ª—ã –∞–¥–º–∏–Ω–∫–∏..."
    
    local update_commands=(
        "cd /root"
        "rm -rf $REMOTE_PATH.bak 2>/dev/null || true"
        "mv $REMOTE_PATH $REMOTE_PATH.bak 2>/dev/null || true"
        "mkdir -p $REMOTE_PATH"
        "tar -xzf $archive_name -C $REMOTE_PATH --strip-components=0"
        "chmod +x $REMOTE_PATH/*.sh 2>/dev/null || true"
        "chmod 600 $REMOTE_PATH/keys/* 2>/dev/null || true"
    )
    
    for cmd in "${update_commands[@]}"; do
        if ! execute_ssh "$cmd"; then
            log_error "–û—à–∏–±–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∫–æ–º–∞–Ω–¥—ã: $cmd"
            exit 1
        fi
    done
    
    # 5. –ó–∞–ø—É—Å–∫–∞–µ–º Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
    log_info "üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä..."
    
    local docker_commands=(
        "cd $REMOTE_PATH"
        "docker-compose up -d --build"
    )
    
    for cmd in "${docker_commands[@]}"; do
        if ! execute_ssh "$cmd"; then
            log_error "–û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞: $cmd"
            exit 1
        fi
    done
    
    # 6. –ñ–¥–µ–º –∑–∞–ø—É—Å–∫–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
    log_info "‚è≥ –ñ–¥–µ–º –∑–∞–ø—É—Å–∫–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞..."
    sleep 10
    
    # 7. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
    log_info "üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞..."
    if ! execute_ssh "docker ps | grep $DOCKER_CONTAINER"; then
        log_error "–ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –Ω–µ –∑–∞–ø—É—â–µ–Ω –ø–æ—Å–ª–µ –¥–µ–ø–ª–æ—è"
        exit 1
    fi
    
    # 8. –î–µ–ª–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å
    log_info "üß™ –í—ã–ø–æ–ª–Ω—è–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å..."
    if execute_ssh "curl -s http://localhost:3001/api/health || echo 'Health check failed'"; then
        log_success "–¢–µ—Å—Ç–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å –≤—ã–ø–æ–ª–Ω–µ–Ω —É—Å–ø–µ—à–Ω–æ"
    else
        log_warning "–¢–µ—Å—Ç–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω, –Ω–æ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –∑–∞–ø—É—â–µ–Ω"
    fi
    
    # 9. –û—á–∏—â–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã
    log_info "üßπ –û—á–∏—â–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã..."
    execute_ssh "rm -f /root/$archive_name"
    rm -f "$archive_path"
    
    log_success "üéâ –î–µ–ø–ª–æ–π –∞–¥–º–∏–Ω–∫–∏ –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ!"
    log_info "üìä –ê–¥–º–∏–Ω–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ –ø–æ –∞–¥—Ä–µ—Å—É: http://$SERVER_IP:3001"
}

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫
cleanup() {
    log_warning "üîÑ –ü–æ–ø—ã—Ç–∫–∞ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è..."
    execute_ssh "cd $REMOTE_PATH && docker-compose up -d" > /dev/null 2>&1
    
    # –û—á–∏—Å—Ç–∫–∞ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
    [ -f "$archive_path" ] && rm -f "$archive_path"
}

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—à–∏–±–æ–∫
trap cleanup ERR

# –ó–∞–ø—É—Å–∫–∞–µ–º –æ—Å–Ω–æ–≤–Ω–æ–π —Å–∫—Ä–∏–ø—Ç
main "$@" 