const kafkaService = require('../notifications/kafka.service');
const logger = require('../config/logger.config');

async function testKafkaIntegration() {
  console.log('üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ Kafka...\n');

  try {
    // –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ Kafka
    console.log('1. –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Kafka...');
    await kafkaService.connect();
    console.log('‚úÖ Kafka –ø–æ–¥–∫–ª—é—á–µ–Ω\n');

    // –¢–µ—Å—Ç 1: –û—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –ª–∞–π–∫–µ
    console.log('2. –¢–µ—Å—Ç –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –ª–∞–π–∫–µ...');
    const likeResult = await kafkaService.sendLikeNotification('user123', {
      name: '–ê–Ω–Ω–∞',
      age: 25,
      photoUrl: 'https://example.com/photo.jpg'
    });
    console.log(likeResult ? '‚úÖ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –ª–∞–π–∫–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ' : '‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏\n');

    // –¢–µ—Å—Ç 2: –û—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –º—ç—Ç—á–µ
    console.log('3. –¢–µ—Å—Ç –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –º—ç—Ç—á–µ...');
    const matchResult = await kafkaService.sendMatchNotification('user456', {
      name: '–ú–∞—Ä–∏—è',
      age: 28,
      photoUrl: 'https://example.com/photo2.jpg'
    });
    console.log(matchResult ? '‚úÖ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –º—ç—Ç—á–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ' : '‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏\n');

    // –¢–µ—Å—Ç 3: –û—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ fast match
    console.log('4. –¢–µ—Å—Ç –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ fast match...');
    const fastMatchResult = await kafkaService.sendFastMatchNotification('user789', {
      name: '–ï–ª–µ–Ω–∞',
      age: 26,
      photoUrl: 'https://example.com/photo3.jpg'
    }, 'request123');
    console.log(fastMatchResult ? '‚úÖ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ fast match –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ' : '‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏\n');

    // –¢–µ—Å—Ç 4: –û—Ç–ø—Ä–∞–≤–∫–∞ –∞–Ω–∞–ª–∏—Ç–∏—á–µ—Å–∫–æ–≥–æ —Å–æ–±—ã—Ç–∏—è
    console.log('5. –¢–µ—Å—Ç –æ—Ç–ø—Ä–∞–≤–∫–∏ –∞–Ω–∞–ª–∏—Ç–∏—á–µ—Å–∫–æ–≥–æ —Å–æ–±—ã—Ç–∏—è...');
    const analyticsResult = await kafkaService.sendAnalyticsEvent('user_login', {
      userId: 'user123',
      timestamp: Date.now(),
      userAgent: 'Mozilla/5.0...',
      ip: '192.168.1.1'
    });
    console.log(analyticsResult ? '‚úÖ –ê–Ω–∞–ª–∏—Ç–∏—á–µ—Å–∫–æ–µ —Å–æ–±—ã—Ç–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ' : '‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏\n');

    // –ñ–¥–µ–º –Ω–µ–º–Ω–æ–≥–æ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π
    console.log('6. –û–∂–∏–¥–∞–Ω–∏–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π...');
    await new Promise(resolve => setTimeout(resolve, 5000));

    // –û—Ç–∫–ª—é—á–∞–µ–º—Å—è –æ—Ç Kafka
    console.log('7. –û—Ç–∫–ª—é—á–µ–Ω–∏–µ –æ—Ç Kafka...');
    await kafkaService.disconnect();
    console.log('‚úÖ Kafka –æ—Ç–∫–ª—é—á–µ–Ω\n');

    console.log('üéâ –í—Å–µ —Ç–µ—Å—Ç—ã –∑–∞–≤–µ—Ä—à–µ–Ω—ã!');
    console.log('\nüìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã:');
    console.log('- –õ–∞–π–∫–∏: ' + (likeResult ? '‚úÖ' : '‚ùå'));
    console.log('- –ú—ç—Ç—á–∏: ' + (matchResult ? '‚úÖ' : '‚ùå'));
    console.log('- Fast Match: ' + (fastMatchResult ? '‚úÖ' : '‚ùå'));
    console.log('- –ê–Ω–∞–ª–∏—Ç–∏–∫–∞: ' + (analyticsResult ? '‚úÖ' : '‚ùå'));

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:', error);
    await kafkaService.disconnect();
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç
testKafkaIntegration(); 