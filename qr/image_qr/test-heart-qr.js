const {
  generateHeartQRCode,
  generateMultiHeartQRCode,
  generateGradientHeartQRCode
} = require('./heartQrGenerator');
const fs = require('fs').promises;
const path = require('path');

/**
 * –¢–µ—Å—Ç–∏—Ä—É–µ—Ç –≥–µ–Ω–µ—Ä–∞—Ü–∏—é QR-–∫–æ–¥–æ–≤ —Å —Å–µ—Ä–¥–µ—á–∫–∞–º–∏
 */
async function testHeartQrGeneration() {
  try {
    console.log('üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ QR-–∫–æ–¥–æ–≤ —Å —Å–µ—Ä–¥–µ—á–∫–∞–º–∏...\n');

    const testData = 'https://example.com/test-heart-qr';
    const outputDir = path.join(__dirname, 'test-output');

    // –°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫—É –¥–ª—è —Ç–µ—Å—Ç–æ–≤—ã—Ö —Ñ–∞–π–ª–æ–≤
    try {
      await fs.mkdir(outputDir, { recursive: true });
    } catch (error) {
      // –ü–∞–ø–∫–∞ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
    }

    // –¢–µ—Å—Ç 1: QR-–∫–æ–¥ —Å —Å–µ—Ä–¥–µ—á–∫–æ–º –≤ —Ü–µ–Ω—Ç—Ä–µ
    console.log('1Ô∏è‚É£ –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º QR-–∫–æ–¥ —Å —Å–µ—Ä–¥–µ—á–∫–æ–º –≤ —Ü–µ–Ω—Ç—Ä–µ...');
    const centerHeartQr = await generateHeartQRCode(testData, {
      size: 300,
      foregroundColor: '#FF6B6B',
      backgroundColor: '#FFFFFF',
      heartColor: '#FF4757'
    });
    await fs.writeFile(path.join(outputDir, 'center-heart-qr.png'), centerHeartQr);
    console.log('‚úÖ QR-–∫–æ–¥ —Å —Å–µ—Ä–¥–µ—á–∫–æ–º –≤ —Ü–µ–Ω—Ç—Ä–µ —Å–æ–∑–¥–∞–Ω: center-heart-qr.png\n');

    // –¢–µ—Å—Ç 2: QR-–∫–æ–¥ —Å —Å–µ—Ä–¥–µ—á–∫–∞–º–∏ –≤ —É–≥–ª–∞—Ö
    console.log('2Ô∏è‚É£ –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º QR-–∫–æ–¥ —Å —Å–µ—Ä–¥–µ—á–∫–∞–º–∏ –≤ —É–≥–ª–∞—Ö...');
    const cornersHeartQr = await generateMultiHeartQRCode(testData, {
      size: 300,
      foregroundColor: '#FF6B6B',
      backgroundColor: '#FFFFFF',
      heartColor: '#FF4757'
    });
    await fs.writeFile(path.join(outputDir, 'corners-heart-qr.png'), cornersHeartQr);
    console.log('‚úÖ QR-–∫–æ–¥ —Å —Å–µ—Ä–¥–µ—á–∫–∞–º–∏ –≤ —É–≥–ª–∞—Ö —Å–æ–∑–¥–∞–Ω: corners-heart-qr.png\n');

    // –¢–µ—Å—Ç 3: QR-–∫–æ–¥ —Å –≥—Ä–∞–¥–∏–µ–Ω—Ç–Ω—ã–º —Å–µ—Ä–¥–µ—á–∫–æ–º
    console.log('3Ô∏è‚É£ –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º QR-–∫–æ–¥ —Å –≥—Ä–∞–¥–∏–µ–Ω—Ç–Ω—ã–º —Å–µ—Ä–¥–µ—á–∫–æ–º...');
    const gradientHeartQr = await generateGradientHeartQRCode(testData, {
      size: 300,
      foregroundColor: '#FF6B6B',
      backgroundColor: '#FFFFFF',
      gradientColors: ['#FF6B6B', '#FF8E8E', '#FF4757']
    });
    await fs.writeFile(path.join(outputDir, 'gradient-heart-qr.png'), gradientHeartQr);
    console.log('‚úÖ QR-–∫–æ–¥ —Å –≥—Ä–∞–¥–∏–µ–Ω—Ç–Ω—ã–º —Å–µ—Ä–¥–µ—á–∫–æ–º —Å–æ–∑–¥–∞–Ω: gradient-heart-qr.png\n');

    // –¢–µ—Å—Ç 4: QR-–∫–æ–¥ —Å –±–æ–ª—å—à–∏–º —Ä–∞–∑–º–µ—Ä–æ–º
    console.log('4Ô∏è‚É£ –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –±–æ–ª—å—à–æ–π QR-–∫–æ–¥ —Å —Å–µ—Ä–¥–µ—á–∫–æ–º...');
    const largeHeartQr = await generateHeartQRCode(testData, {
      size: 500,
      foregroundColor: '#FF6B6B',
      backgroundColor: '#FFFFFF',
      heartColor: '#FF4757',
      heartSize: 0.3
    });
    await fs.writeFile(path.join(outputDir, 'large-heart-qr.png'), largeHeartQr);
    console.log('‚úÖ –ë–æ–ª—å—à–æ–π QR-–∫–æ–¥ —Å —Å–µ—Ä–¥–µ—á–∫–æ–º —Å–æ–∑–¥–∞–Ω: large-heart-qr.png\n');

    // –¢–µ—Å—Ç 5: QR-–∫–æ–¥ —Å —Ä–∞–∑–Ω—ã–º–∏ —Ü–≤–µ—Ç–∞–º–∏
    console.log('5Ô∏è‚É£ –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º QR-–∫–æ–¥ —Å —Ä–∞–∑–Ω—ã–º–∏ —Ü–≤–µ—Ç–∞–º–∏...');
    const colorfulHeartQr = await generateHeartQRCode(testData, {
      size: 300,
      foregroundColor: '#755BED', // –§–∏–æ–ª–µ—Ç–æ–≤—ã–π
      backgroundColor: '#F8F9FA', // –°–≤–µ—Ç–ª–æ-—Å–µ—Ä—ã–π
      heartColor: '#F5635B' // –ö—Ä–∞—Å–Ω—ã–π
    });
    await fs.writeFile(path.join(outputDir, 'colorful-heart-qr.png'), colorfulHeartQr);
    console.log('‚úÖ –¶–≤–µ—Ç–Ω–æ–π QR-–∫–æ–¥ —Å —Å–µ—Ä–¥–µ—á–∫–æ–º —Å–æ–∑–¥–∞–Ω: colorful-heart-qr.png\n');

    console.log('üéâ –í—Å–µ —Ç–µ—Å—Ç—ã –∑–∞–≤–µ—Ä—à–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!');
    console.log(`üìÅ –§–∞–π–ª—ã —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤: ${outputDir}`);
    console.log('\nüìã –°–ø–∏—Å–æ–∫ —Å–æ–∑–¥–∞–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤:');
    console.log('- center-heart-qr.png - –°–µ—Ä–¥–µ—á–∫–æ –≤ —Ü–µ–Ω—Ç—Ä–µ');
    console.log('- corners-heart-qr.png - –°–µ—Ä–¥–µ—á–∫–∏ –≤ —É–≥–ª–∞—Ö');
    console.log('- gradient-heart-qr.png - –ì—Ä–∞–¥–∏–µ–Ω—Ç–Ω–æ–µ —Å–µ—Ä–¥–µ—á–∫–æ');
    console.log('- large-heart-qr.png - –ë–æ–ª—å—à–æ–π —Ä–∞–∑–º–µ—Ä');
    console.log('- colorful-heart-qr.png - –†–∞–∑–Ω—ã–µ —Ü–≤–µ—Ç–∞');

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏:', error);
  }
}

/**
 * –¢–µ—Å—Ç–∏—Ä—É–µ—Ç –≥–µ–Ω–µ—Ä–∞—Ü–∏—é QR-–∫–æ–¥–∞ —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–º–∏ –¥–∞–Ω–Ω—ã–º–∏
 */
async function testCustomData() {
  try {
    console.log('\nüîß –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–º–∏ –¥–∞–Ω–Ω—ã–º–∏...\n');

    const customData = 'yourapp://qr/permanent/test-user-123';
    const outputDir = path.join(__dirname, 'test-output');

    // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º QR-–∫–æ–¥ —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–º–∏ –¥–∞–Ω–Ω—ã–º–∏
    const customHeartQr = await generateHeartQRCode(customData, {
      size: 400,
      foregroundColor: '#F5635B',
      backgroundColor: '#FFFFFF',
      heartColor: '#755BED',
      heartSize: 0.2
    });
    await fs.writeFile(path.join(outputDir, 'custom-user-qr.png'), customHeartQr);
    console.log('‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π QR-–∫–æ–¥ —Å–æ–∑–¥–∞–Ω: custom-user-qr.png');

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏—Ö –¥–∞–Ω–Ω—ã—Ö:', error);
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç—ã
if (require.main === module) {
  testHeartQrGeneration()
    .then(() => testCustomData())
    .then(() => {
      console.log('\n‚ú® –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!');
      process.exit(0);
    })
    .catch((error) => {
      console.error('üí• –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞:', error);
      process.exit(1);
    });
}

module.exports = {
  testHeartQrGeneration,
  testCustomData
}; 