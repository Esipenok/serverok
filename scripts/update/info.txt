Процесс обновления сервера
Подготовка локальных изменений
Внесите необходимые изменения в код на локальном компьютере
Протестируйте изменения локально, чтобы убедиться в их работоспособности
Запуск скрипта развертывания
Запустите скрипт deploy.ps1 из папки scripts: .\scripts\deploy.ps1
Создание архива
Скрипт создает архив server_update.tar.gz, исключая ненужные файлы (node_modules, .git, логи и т.д.)
Размер архива отображается в консоли
Копирование файлов на сервер
Архив server_update.tar.gz копируется на сервер по SSH
Скрипт обновления simple_update.sh также копируется на сервер
Выполнение обновления на сервере
Скрипт simple_update.sh запускается на сервере и выполняет следующие действия:
Создает резервную копию текущих файлов
Останавливает Docker-контейнеры
Распаковывает новую версию из архива
Устанавливает зависимости (npm install --production)
Запускает контейнеры Docker (mongodb и app)
Ждет 10 секунд для запуска сервера
Проверяет статус контейнеров
Проверяет работоспособность API через эндпоинт /api/health
Проверка результатов
Скрипт выводит информацию о статусе обновления
Если API отвечает успешно, выводится сообщение "✅ API работает корректно"
В противном случае выводится предупреждение и рекомендация проверить логи
Очистка
Локальный архив server_update.tar.gz удаляется после завершения процесса
Дополнительная проверка (при необходимости)
Можно проверить логи сервера с помощью команды docker logs dating_app_server
Можно проверить статус контейнеров с помощью команды docker ps
Весь процесс автоматизирован и требует минимального вмешательства, что снижает вероятность ошибок при обновлении.