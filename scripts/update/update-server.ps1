# –°–∫—Ä–∏–ø—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å–µ—Ä–≤–µ—Ä–∞ Willowe
# –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–æ–∑–¥–∞–µ—Ç –∞—Ä—Ö–∏–≤, –∑–∞–≥—Ä—É–∂–∞–µ—Ç –Ω–∞ —Å–µ—Ä–≤–µ—Ä –∏ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ—Ç –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä

param(
    [string]$ServerIP = "46.62.131.90",
    [string]$SSHKey = "C:\Users\Andrey\.ssh\id_ed25519",
    [string]$Username = "root"
)

Write-Host "üöÄ –ù–∞—á–∏–Ω–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–µ—Ä–≤–µ—Ä–∞ Willowe..." -ForegroundColor Green

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è SSH –∫–æ–º–∞–Ω–¥
function Invoke-SSHCommand {
    param([string]$Command)
    $sshCmd = "ssh -i `"$SSHKey`" ${Username}@${ServerIP} `"$Command`""
    Write-Host "–í—ã–ø–æ–ª–Ω—è–µ–º: $Command" -ForegroundColor Yellow
    Invoke-Expression $sshCmd
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä
function Upload-File {
    param([string]$LocalPath, [string]$RemotePath)
    $scpCmd = "scp -i `"$SSHKey`" `"$LocalPath`" ${Username}@${ServerIP}:$RemotePath"
    Write-Host "–ó–∞–≥—Ä—É–∂–∞–µ–º: $LocalPath -> $RemotePath" -ForegroundColor Yellow
    Invoke-Expression $scpCmd
}

try {
    # –®–∞–≥ 1: –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
    Write-Host "üì¶ –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏..." -ForegroundColor Cyan
    
    # –ü–µ—Ä–µ—Ö–æ–¥–∏–º –≤ –ø–∞–ø–∫—É src –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
    Push-Location "src"
    
    # –°–ø–∏—Å–æ–∫ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
    $requiredDeps = @(
        "kafkajs",
        "prom-client"
    )
    
    foreach ($dep in $requiredDeps) {
        $installed = npm list $dep --depth=0 2>$null
        if (-not $installed -or $installed -match "empty") {
            Write-Host "–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º $dep..." -ForegroundColor Yellow
            npm install $dep --save
        } else {
            Write-Host "‚úÖ $dep —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω" -ForegroundColor Green
        }
    }
    
    # –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –≤ –∫–æ—Ä–Ω–µ–≤—É—é –ø–∞–ø–∫—É
    Pop-Location
    
    # –®–∞–≥ 2: –°–æ–∑–¥–∞–µ–º –∞—Ä—Ö–∏–≤ —Ç–æ–ª—å–∫–æ –∏–∑ –ø–∞–ø–∫–∏ src
    Write-Host "üì¶ –°–æ–∑–¥–∞–µ–º –∞—Ä—Ö–∏–≤ –ø—Ä–æ–µ–∫—Ç–∞..." -ForegroundColor Cyan
    $archiveName = "willowe-update-$(Get-Date -Format 'yyyyMMdd-HHmmss').zip"
    
    # –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–µ –∞—Ä—Ö–∏–≤—ã
    Get-ChildItem -Path . -Name "willowe-update-*.zip" | ForEach-Object {
        Remove-Item $_ -Force
        Write-Host "–£–¥–∞–ª–µ–Ω —Å—Ç–∞—Ä—ã–π –∞—Ä—Ö–∏–≤: $_" -ForegroundColor Gray
    }
    
    # –°–æ–∑–¥–∞–µ–º –∞—Ä—Ö–∏–≤ —Ç–æ–ª—å–∫–æ –∏–∑ –ø–∞–ø–∫–∏ src, –∏—Å–∫–ª—é—á–∞—è infrastructure/uploads
    $srcItems = Get-ChildItem -Path "src" -Exclude node_modules,*.zip,infrastructure/uploads | ForEach-Object { $_.FullName }
    Compress-Archive -Path $srcItems -DestinationPath $archiveName -Force
    
    if (Test-Path $archiveName) {
        Write-Host "‚úÖ –ê—Ä—Ö–∏–≤ —Å–æ–∑–¥–∞–Ω: $archiveName" -ForegroundColor Green
    } else {
        throw "–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∞—Ä—Ö–∏–≤–∞"
    }
    
    # –®–∞–≥ 3: –ó–∞–≥—Ä—É–∂–∞–µ–º –∞—Ä—Ö–∏–≤ –Ω–∞ —Å–µ—Ä–≤–µ—Ä
    Write-Host "üì§ –ó–∞–≥—Ä—É–∂–∞–µ–º –∞—Ä—Ö–∏–≤ –Ω–∞ —Å–µ—Ä–≤–µ—Ä..." -ForegroundColor Cyan
    Upload-File -LocalPath $archiveName -RemotePath "/root/"
    
    # –®–∞–≥ 4: –û–±–Ω–æ–≤–ª—è–µ–º —Ñ–∞–π–ª—ã –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ, —Å–æ—Ö—Ä–∞–Ω—è—è infrastructure
    Write-Host "üîÑ –û–±–Ω–æ–≤–ª—è–µ–º —Ñ–∞–π–ª—ã –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ..." -ForegroundColor Cyan
    
    # –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—É—é –ø–∞–ø–∫—É –¥–ª—è —Ä–∞—Å–ø–∞–∫–æ–≤–∫–∏
    Invoke-SSHCommand "mkdir -p /root/temp_update"
    
    # –†–∞—Å–ø–∞–∫–æ–≤—ã–≤–∞–µ–º –∞—Ä—Ö–∏–≤ –≤–æ –≤—Ä–µ–º–µ–Ω–Ω—É—é –ø–∞–ø–∫—É
    Invoke-SSHCommand "cd /root && unzip -o $archiveName -d /root/temp_update"
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø–∞–ø–∫—É infrastructure/uploads
    Invoke-SSHCommand "if [ -d '/root/app/src/infrastructure/uploads' ]; then cp -r /root/app/src/infrastructure/uploads /root/temp_uploads; fi"
    
    # –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–µ —Ñ–∞–π–ª—ã, –∫—Ä–æ–º–µ infrastructure
    Invoke-SSHCommand "cd /root/app && find . -mindepth 1 -not -path './src/infrastructure*' -delete"
    
    # –ö–æ–ø–∏—Ä—É–µ–º –Ω–æ–≤—ã–µ —Ñ–∞–π–ª—ã
    Invoke-SSHCommand "cp -r /root/temp_update/* /root/app/"
    
    # –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–∞–ø–∫—É infrastructure/uploads –µ—Å–ª–∏ –æ–Ω–∞ –±—ã–ª–∞
    Invoke-SSHCommand "if [ -d '/root/temp_uploads' ]; then mkdir -p /root/app/src/infrastructure/uploads && cp -r /root/temp_uploads/* /root/app/src/infrastructure/uploads/; fi"
    
    # –û—á–∏—â–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã
    Invoke-SSHCommand "rm -rf /root/temp_update /root/temp_uploads"
    
    # –®–∞–≥ 5: –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
    Write-Host "üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä..." -ForegroundColor Cyan
    Invoke-SSHCommand "docker stop dating_app_server 2>/dev/null; docker rm dating_app_server 2>/dev/null"
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º –Ω–æ–≤—ã–π –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
    $dockerRunCmd = "docker run -d --name dating_app_server --network docker_app-network -p 3000:3000 -v /root/app:/app -w /app/src -e NODE_ENV=production -e PORT=3000 -e MONGODB_URI=mongodb://admin:password@dating_app_mongodb:27017/dating_app?authSource=admin -e JWT_SECRET=your_secret_key -e JWT_EXPIRE=7d -e BASE_URL=https://willowe.love -e STATIC_URL=https://willowe.love -e REDIS_URL=redis://dating_app_redis:6379 -e KAFKA_BROKER=dating_app_kafka:9092 -e KAFKA_CLIENT_ID=dating_app_producer -e KAFKA_GROUP_ID=dating_app_consumer node:18 bash -c 'npm install --production && node scripts/setup-kafka-topics.js && node server.js'"
    
    Invoke-SSHCommand $dockerRunCmd
    
    # –®–∞–≥ 6: –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å
    Write-Host "üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞..." -ForegroundColor Cyan
    Start-Sleep -Seconds 10
    
    $status = Invoke-SSHCommand "docker ps -a | grep dating_app_server"
    Write-Host "–°—Ç–∞—Ç—É—Å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞: $status" -ForegroundColor White
    
    # –®–∞–≥ 7: –ü—Ä–æ–≤–µ—Ä—è–µ–º –ª–æ–≥–∏
    Write-Host "üìã –ü–æ—Å–ª–µ–¥–Ω–∏–µ –ª–æ–≥–∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞:" -ForegroundColor Cyan
    $logs = Invoke-SSHCommand "docker logs dating_app_server --tail 20"
    Write-Host $logs -ForegroundColor White
    
    # –®–∞–≥ 8: –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å —Å–µ—Ä–≤–µ—Ä–∞
    Write-Host "üåê –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å —Å–µ—Ä–≤–µ—Ä–∞..." -ForegroundColor Cyan
    try {
        $response = Invoke-WebRequest -Uri "http://${ServerIP}:3000/api/health" -TimeoutSec 10
        if ($response.StatusCode -eq 200) {
            Write-Host "‚úÖ –°–µ—Ä–≤–µ—Ä –¥–æ—Å—Ç—É–ø–µ–Ω –∏ –æ—Ç–≤–µ—á–∞–µ—Ç!" -ForegroundColor Green
        } else {
            Write-Host "‚ö†Ô∏è –°–µ—Ä–≤–µ—Ä –æ—Ç–≤–µ—á–∞–µ—Ç, –Ω–æ —Å—Ç–∞—Ç—É—Å: $($response.StatusCode)" -ForegroundColor Yellow
        }
    } catch {
        Write-Host "‚ö†Ô∏è –°–µ—Ä–≤–µ—Ä –ø–æ–∫–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω (—ç—Ç–æ –Ω–æ—Ä–º–∞–ª—å–Ω–æ –ø—Ä–∏ –ø–µ—Ä–≤–æ–º –∑–∞–ø—É—Å–∫–µ)" -ForegroundColor Yellow
    }
    
    # –®–∞–≥ 9: –û—á–∏—Å—Ç–∫–∞
    Write-Host "üßπ –û—á–∏—â–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã..." -ForegroundColor Cyan
    Remove-Item $archiveName -Force
    Invoke-SSHCommand "rm -f /root/$archiveName"
    
    Write-Host "üéâ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!" -ForegroundColor Green
    Write-Host "–°–µ—Ä–≤–µ—Ä: http://${ServerIP}:3000" -ForegroundColor Cyan
    Write-Host "Health check: http://${ServerIP}:3000/api/health" -ForegroundColor Cyan
    
} catch {
    Write-Host "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏: $($_.Exception.Message)" -ForegroundColor Red
    Write-Host "–ü–æ–ª–Ω–∞—è –æ—à–∏–±–∫–∞: $($_.Exception)" -ForegroundColor Red
    exit 1
} 