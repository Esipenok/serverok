#!/bin/bash
# Zero-downtime deployment —Å–∫—Ä–∏–ø—Ç

set -e

echo "=== ZERO-DOWNTIME DEPLOYMENT ==="
echo "–î–∞—Ç–∞: $(date)"

# –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é –≤–µ—Ä—Å–∏—é
RELEASE_NAME=$(date +%Y%m%d_%H%M%S)
RELEASE_PATH="/root/app/releases/$RELEASE_NAME"
echo "–°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–π –≤–µ—Ä—Å–∏–∏: $RELEASE_NAME"

# –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–µ–∫—É—â—É—é –≤–µ—Ä—Å–∏—é –¥–ª—è –≤–æ–∑–º–æ–∂–Ω–æ–≥–æ –æ—Ç–∫–∞—Ç–∞
CURRENT_VERSION=$(readlink /root/app/current | xargs basename 2>/dev/null || echo "")

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –∞—Ä—Ö–∏–≤–∞
if [ ! -f "/root/app/server_update.tar.gz" ]; then
    echo "–û—à–∏–±–∫–∞: –ê—Ä—Ö–∏–≤ server_update.tar.gz –Ω–µ –Ω–∞–π–¥–µ–Ω"
    exit 1
fi

# –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –¥–ª—è –Ω–æ–≤–æ–π –≤–µ—Ä—Å–∏–∏
mkdir -p "$RELEASE_PATH"

# –†–∞—Å–ø–∞–∫–æ–≤—ã–≤–∞–µ–º –Ω–æ–≤—É—é –≤–µ—Ä—Å–∏—é
echo "–†–∞—Å–ø–∞–∫–æ–≤–∫–∞ –Ω–æ–≤–æ–π –≤–µ—Ä—Å–∏–∏..."
tar -xzf /root/app/server_update.tar.gz -C "$RELEASE_PATH"
rm /root/app/server_update.tar.gz

# –ü–µ—Ä–µ—Ö–æ–¥–∏–º –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –Ω–æ–≤–æ–π –≤–µ—Ä—Å–∏–∏
cd "$RELEASE_PATH"

# –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Ä–∞—Å–ø–∞–∫–æ–≤–∞–Ω–Ω–æ–π –ø–∞–ø–∫–∏
echo "üìÅ –°–æ–¥–µ—Ä–∂–∏–º–æ–µ —Ä–∞—Å–ø–∞–∫–æ–≤–∞–Ω–Ω–æ–π –ø–∞–ø–∫–∏:"
ls -la

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É
if [ ! -d "src" ]; then
    echo "‚ùå –û—à–∏–±–∫–∞: –ü–∞–ø–∫–∞ src –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –≤ –∞—Ä—Ö–∏–≤–µ"
    exit 1
fi

echo "üìÅ –°–æ–¥–µ—Ä–∂–∏–º–æ–µ –ø–∞–ø–∫–∏ src:"
ls -la src/

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω—É–∂–Ω–∞ –ª–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
echo "–ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."
if [ ! -d "/root/app/shared/node_modules" ] || [ ! -f "src/package.json" ]; then
    echo "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."
    if [ -f "src/package.json" ]; then
        cd src
        npm install --production
        # –°–æ–∑–¥–∞–µ–º shared –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç
        mkdir -p /root/app/shared/node_modules
        # –ö–æ–ø–∏—Ä—É–µ–º node_modules –≤ shared
        cp -r node_modules/* /root/app/shared/node_modules/
        rm -rf node_modules
        cd ..
    else
        echo "‚ùå –û—à–∏–±–∫–∞: package.json –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ src/"
        rm -rf "$RELEASE_PATH"
        exit 1
    fi
else
    echo "–ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã –≤ shared"
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç—å –Ω–æ–≤–æ–π –≤–µ—Ä—Å–∏–∏
echo "–ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–æ–≤–æ–π –≤–µ—Ä—Å–∏–∏..."
# –í—Ä–µ–º–µ–Ω–Ω–æ –∑–∞–ø—É—Å–∫–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –æ—Å–Ω–æ–≤–Ω–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞
docker run --rm \
  --name test_main_server \
  --network docker_app-network \
  -v "$RELEASE_PATH:/app" \
  -v "/root/app/shared/node_modules:/app/src/node_modules" \
  -v "/root/app/shared/.env:/app/src/.env" \
  -e NODE_ENV=production \
  -e PORT=3000 \
  -e MONGODB_URI=mongodb://admin:password@dating_app_mongodb:27017/dating_app?authSource=admin \
  -e JWT_SECRET=your_secret_key \
  -e JWT_EXPIRE=7d \
  -e BASE_URL=https://willowe.love \
  -e STATIC_URL=https://willowe.love \
  -e REDIS_URL=redis://dating_app_redis:6379 \
  -e KAFKA_BROKER=dating_app_kafka:9092 \
  -e KAFKA_CLIENT_ID=dating_app_producer \
  -e KAFKA_GROUP_ID=dating_app_consumer \
  node:18 \
  bash -c "cd /app/src && npm install --production && node server.js --test"

if [ $? -ne 0 ]; then
    echo "‚ùå –û—à–∏–±–∫–∞: –û—Å–Ω–æ–≤–Ω–æ–π —Å–µ—Ä–≤–µ—Ä –Ω–µ –ø—Ä–æ—à–µ–ª –ø—Ä–æ–≤–µ—Ä–∫—É"
    rm -rf "$RELEASE_PATH"
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–¥–º–∏–Ω–∫—É –µ—Å–ª–∏ –æ–Ω–∞ –µ—Å—Ç—å
if [ -d "$RELEASE_PATH/src/adminka" ]; then
    echo "–ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–¥–º–∏–Ω–∫–∏..."
    docker run --rm \
      --name test_admin \
      --network docker_app-network \
      -v "$RELEASE_PATH/src/adminka:/app" \
      -e NODE_ENV=production \
      -e PORT=3001 \
      node:18 \
      sh -c "cd /app && npm install --production && node server.js --test"
    
    if [ $? -ne 0 ]; then
        echo "‚ùå –û—à–∏–±–∫–∞: –ê–¥–º–∏–Ω–∫–∞ –Ω–µ –ø—Ä–æ—à–ª–∞ –ø—Ä–æ–≤–µ—Ä–∫—É"
        rm -rf "$RELEASE_PATH"
        exit 1
    fi
fi

echo "‚úÖ –ù–æ–≤–∞—è –≤–µ—Ä—Å–∏—è –ø—Ä–æ—à–ª–∞ –ø—Ä–æ–≤–µ—Ä–∫—É"

# –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º –Ω–∞ –Ω–æ–≤—É—é –≤–µ—Ä—Å–∏—é (zero-downtime)
echo "–ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –Ω–∞ –Ω–æ–≤—É—é –≤–µ—Ä—Å–∏—é..."
ln -sfn "$RELEASE_PATH" /root/app/current

# –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º shared –¥–∞–Ω–Ω—ã–µ –≤ –Ω–æ–≤—É—é –≤–µ—Ä—Å–∏—é
echo "–í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ shared –¥–∞–Ω–Ω—ã—Ö..."

# –û—Å–Ω–æ–≤–Ω–æ–π —Å–µ—Ä–≤–µ—Ä
if [ -d "/root/app/shared/uploads" ]; then
    mkdir -p "$RELEASE_PATH/src/infrastructure/uploads"
    cp -r /root/app/shared/uploads/* "$RELEASE_PATH/src/infrastructure/uploads/"
fi

if [ -d "/root/app/shared/ssl" ]; then
    mkdir -p "$RELEASE_PATH/src/infrastructure/ssl"
    cp -r /root/app/shared/ssl/* "$RELEASE_PATH/src/infrastructure/ssl/"
fi

if [ -d "/root/app/shared/logs" ]; then
    mkdir -p "$RELEASE_PATH/src/logs"
    cp -r /root/app/shared/logs/* "$RELEASE_PATH/src/logs/"
fi

# –ê–¥–º–∏–Ω–∫–∞
if [ -d "/root/app/shared/adminka_logs" ]; then
    mkdir -p "$RELEASE_PATH/src/adminka/logs"
    cp -r /root/app/shared/adminka_logs/* "$RELEASE_PATH/src/adminka/logs/"
fi

if [ -d "/root/app/shared/adminka_backups" ]; then
    mkdir -p "$RELEASE_PATH/src/adminka/backups"
    cp -r /root/app/shared/adminka_backups/* "$RELEASE_PATH/src/adminka/backups/"
fi

if [ -f "/root/app/shared/adminka_analytics/analytics-data.json" ]; then
    mkdir -p "$RELEASE_PATH/src/adminka/analytics"
    cp /root/app/shared/adminka_analytics/analytics-data.json "$RELEASE_PATH/src/adminka/analytics/"
fi

# –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å—Ç–∞—Ä—ã–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã
echo "–û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å—Ç–∞—Ä—ã—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤..."
docker stop dating_app_server willowe_admin_panel 2>/dev/null || true
docker rm dating_app_server willowe_admin_panel 2>/dev/null || true

# –ó–∞–ø—É—Å–∫–∞–µ–º –Ω–æ–≤—ã–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã
echo "–ó–∞–ø—É—Å–∫ –Ω–æ–≤—ã—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤..."

# –û—Å–Ω–æ–≤–Ω–æ–π —Å–µ—Ä–≤–µ—Ä
docker run -d \
  --name dating_app_server \
  --network docker_app-network \
  -p 3000:3000 \
  -v /root/app/current:/app \
  -w /app/src \
  -e NODE_ENV=production \
  -e PORT=3000 \
  -e MONGODB_URI=mongodb://admin:password@dating_app_mongodb:27017/dating_app?authSource=admin \
  -e JWT_SECRET=your_secret_key \
  -e JWT_EXPIRE=7d \
  -e BASE_URL=https://willowe.love \
  -e STATIC_URL=https://willowe.love \
  -e REDIS_URL=redis://dating_app_redis:6379 \
  -e KAFKA_BROKER=dating_app_kafka:9092 \
  -e KAFKA_CLIENT_ID=dating_app_producer \
  -e KAFKA_GROUP_ID=dating_app_consumer \
  node:18 \
  bash -c 'npm install --production && if [ -f "scripts/setup-kafka-topics.js" ]; then node scripts/setup-kafka-topics.js; fi && node server.js'

# –ê–¥–º–∏–Ω–∫–∞
docker run -d \
  --name willowe_admin_panel \
  --network docker_app-network \
  -p 3001:3001 \
  -v /root/app/current/src/adminka:/app \
  -w /app \
  -e NODE_ENV=production \
  -e PORT=3001 \
  node:18 \
  sh -c 'npm install --production && node server.js'

# –ñ–¥–µ–º –∑–∞–ø—É—Å–∫–∞ –∏ –ø—Ä–æ–≤–µ—Ä—è–µ–º health check
echo "–û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π..."
for i in {1..12}; do
    if docker ps | grep -q "dating_app_server.*Up" && docker ps | grep -q "willowe_admin_panel.*Up"; then
        echo "‚úÖ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏—è –∑–∞–ø—É—â–µ–Ω—ã"
        break
    fi
    echo "–ü–æ–ø—ã—Ç–∫–∞ $i/12: –æ–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞..."
    sleep 5
done

# –ü—Ä–æ–≤–µ—Ä—è–µ–º API
echo "–ü—Ä–æ–≤–µ—Ä–∫–∞ API..."
for i in {1..6}; do
    HEALTH_CHECK=$(curl -s -L https://willowe.love/api/health || echo "FAIL")
    if [[ "$HEALTH_CHECK" == *"success"* ]]; then
        echo "‚úÖ API —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ"
        break
    else
        echo "–ü–æ–ø—ã—Ç–∫–∞ $i/6: API –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç, –∂–¥–µ–º..."
        sleep 5
    fi
done

if [[ "$HEALTH_CHECK" != *"success"* ]]; then
    echo "‚ùå API –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç –ø–æ—Å–ª–µ 6 –ø–æ–ø—ã—Ç–æ–∫"
    echo "–û—Ç–∫–∞—Ç –∫ –ø—Ä–µ–¥—ã–¥—É—â–µ–π –≤–µ—Ä—Å–∏–∏..."
    
    # –û—Ç–∫–∞—Ç –∫ –ø—Ä–µ–¥—ã–¥—É—â–µ–π –≤–µ—Ä—Å–∏–∏
    if [ "$CURRENT_VERSION" != "" ]; then
        echo "–í—ã–ø–æ–ª–Ω—è–µ–º –æ—Ç–∫–∞—Ç –∫ –≤–µ—Ä—Å–∏–∏ $CURRENT_VERSION..."
        /root/app/rollback.sh "$CURRENT_VERSION"
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Ç–∫–∞—Ç
        ROLLBACK_CHECK=$(curl -s -L https://willowe.love/api/health || echo "FAIL")
        if [[ "$ROLLBACK_CHECK" == *"success"* ]]; then
            echo "‚úÖ –û—Ç–∫–∞—Ç —É—Å–ø–µ—à–µ–Ω"
        else
            echo "‚ùå –û—Ç–∫–∞—Ç –Ω–µ —É–¥–∞–ª—Å—è"
        fi
    fi
    
    # –£–¥–∞–ª—è–µ–º –Ω–µ—É–¥–∞—á–Ω—É—é –≤–µ—Ä—Å–∏—é
    rm -rf "$RELEASE_PATH"
    exit 1
fi

# –û—á–∏—â–∞–µ–º —Å—Ç–∞—Ä—ã–µ –≤–µ—Ä—Å–∏–∏ (–æ—Å—Ç–∞–≤–ª—è–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ 5)
echo "–û—á–∏—Å—Ç–∫–∞ —Å—Ç–∞—Ä—ã—Ö –≤–µ—Ä—Å–∏–π..."
cd /root/app/releases
RELEASE_COUNT=$(ls -1 | wc -l)
if [ $RELEASE_COUNT -gt 5 ]; then
    echo "–ù–∞–π–¥–µ–Ω–æ $RELEASE_COUNT –≤–µ—Ä—Å–∏–π, –æ—Å—Ç–∞–≤–ª—è–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ 5..."
    # –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–µ –≤–µ—Ä—Å–∏–∏, –æ—Å—Ç–∞–≤–ª—è—è –ø–æ—Å–ª–µ–¥–Ω–∏–µ 5
    ls -1t | tail -n +6 | xargs -r rm -rf
    echo "‚úÖ –£–¥–∞–ª–µ–Ω–æ $(($RELEASE_COUNT - 5)) —Å—Ç–∞—Ä—ã—Ö –≤–µ—Ä—Å–∏–π"
else
    echo "‚úÖ –í–µ—Ä—Å–∏–π –º–µ–Ω—å—à–µ 5, –æ—á–∏—Å—Ç–∫–∞ –Ω–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è"
fi

# –û—á–∏—â–∞–µ–º Docker –æ–±—Ä–∞–∑—ã –∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã
echo "–û—á–∏—Å—Ç–∫–∞ Docker —Ä–µ—Å—É—Ä—Å–æ–≤..."
# –£–¥–∞–ª—è–µ–º –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã
docker container prune -f
# –£–¥–∞–ª—è–µ–º –Ω–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º—ã–µ –æ–±—Ä–∞–∑—ã
docker image prune -f
# –£–¥–∞–ª—è–µ–º –Ω–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º—ã–µ volumes
docker volume prune -f
# –£–¥–∞–ª—è–µ–º –Ω–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º—ã–µ networks
docker network prune -f
echo "‚úÖ Docker —Ä–µ—Å—É—Ä—Å—ã –æ—á–∏—â–µ–Ω—ã"

# –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞—Ç—É—Å
echo ""
echo "=== DEPLOYMENT –ó–ê–í–ï–†–®–ï–ù ==="
echo "‚úÖ –ù–æ–≤–∞—è –≤–µ—Ä—Å–∏—è: $RELEASE_NAME"
echo "‚úÖ –í—Ä–µ–º—è –ø—Ä–æ—Å—Ç–æ—è: 0 —Å–µ–∫—É–Ω–¥"
echo "‚úÖ MongoDB: —Ä–∞–±–æ—Ç–∞–ª–∞ –±–µ–∑ –ø–µ—Ä–µ—Ä—ã–≤–∞"
echo "‚úÖ Redis: —Ä–∞–±–æ—Ç–∞–ª –±–µ–∑ –ø–µ—Ä–µ—Ä—ã–≤–∞"
echo "‚úÖ Kafka: —Ä–∞–±–æ—Ç–∞–ª –±–µ–∑ –ø–µ—Ä–µ—Ä—ã–≤–∞"
echo ""
echo "–°—Ç–∞—Ç—É—Å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤:"
docker ps | grep -E "(dating_app_server|willowe_admin_panel)"
echo ""
echo "–î–æ—Å—Ç—É–ø–Ω—ã–µ –≤–µ—Ä—Å–∏–∏:"
ls -1 /root/app/releases/
echo ""
echo "–î–ª—è –æ—Ç–∫–∞—Ç–∞ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ: /root/app/rollback.sh <–≤–µ—Ä—Å–∏—è>" 